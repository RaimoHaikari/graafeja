"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @all

    stations: [Station]! @all

    trips(departureStationID: Int! @eq): [Trip]! @paginate
}



type Station {
  "Laravelin käyttämä Unique primary key."
  id: ID!
  "Aseman id-tunnus"
  stationID: Int!
  "Aseman suomenkielinen nimi"
  nimi: String!
  "Pisteelle tapahtuneet palautukset"
  palautuksia: Int!
  "Pisteeltä suoritetut lainat"
  lainoja: Int!
  "Montako pyörää asemalta löytyy"
  kapasiteetti: Int!
  fooBar: Int! @field(resolver: "App\\GraphQL\\Queries\\Stations@fooBar")
}


type Trip {
  "Lainausaseman id-tunnus"
  departureStationID: Int!
  "Palautusaseman id-tunnus"
  returnStationId: Int!
  "Matkan pituus"
  coveredDistance: Int!
  "Matkan kesto"
  coveredDistance: Int!
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}